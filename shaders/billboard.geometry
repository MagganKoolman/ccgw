#version 420 core

layout(points) in;
layout(triangle_strip, max_vertices = 4) out;

in vec3 posOut[];
in vec3 normalOut[];

out vec2 uvOut2;
out vec3 normalOut2;

uniform mat4 projection;
uniform vec2 size;

void main()
{
	vec4 P = posOut[0];

	// left bottom
	vec2 va = P.xy * vec2(-0.5,-0.5) * size.x;
	gl_Position = projection * vec4( va, P.zw );
	uvOut2 = vec2( 0.0, 0.0 );
	normalOut2 = vec3( 0.0, 0.0, -1.0 );
	EmitVertex();

	// left top
	vec2 vb = P.xy * vec2(-0.5,0.5) * size.x;
	gl_Position = projection * vec4( vb, P.zw );
	uvOut2 = vec2( 0.0, 1.0 );
	normalOut2 = vec3( 0.0, 0.0, -1.0 );
	EmitVertex();

	// right bottom
	vec2 vd = P.xy + vec2( 0.5, -0.5 ) * size.x;
	gl_Position = projection * vec4( vd, P.zw );
	uvOut2 = vec2( 1.0, 0.0 );
	normalOut2 = vec3( 0.0, 0.0, -1.0 );
	EmitVertex();

	// right top
	vec2 vc = P.xy + vec2( 0.5, 0.5 ) * size.x;
	gl_Position = projection * vec4( vc, P.zw );
	uvOut2 = vec2( 1.0, 1.0 );
	normalOut2 = vec3( 0.0, 0.0, -1.0 );
	EmitVertex();

	EndPrimitive();
}