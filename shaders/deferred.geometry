#version 420 core

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

in vec4 posOut[];
in vec3 normalOut[];
in vec2 colorOut[];

out vec2 uvOut2;
out vec3 normalOut2;

uniform mat4 viewProjection;
uniform mat4 world;
uniform mat4 normalMat;
uniform vec3 cameraPos;

void main()
{
	vec3 p1 = posOut[0].xyz - posOut[1].xyz;
	vec3 p2 = posOut[2].xyz - posOut[1].xyz;
	vec3 testNormal = normalize(cross(p1, p2));
	vec3 aVector = normalize(cameraPos - posOut[1].xyz);
	if(dot(testNormal, aVector) > 0.0f)
	{
		for (int i = 0; i < 3; i++)
		{
			gl_Position = viewProjection * vec4(posOut[i]);
			uvOut2 = colorOut[i];
			vec4 tja = world * vec4(normalOut[i], 0.0);
			normalOut2 = normalize(vec3(normalMat * tja));
			//normalOut2 = normalOut[i];
			EmitVertex();
		}
		EndPrimitive();
	}
}